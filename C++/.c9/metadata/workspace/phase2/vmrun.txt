{"filter":false,"title":"vmrun.txt","tooltip":"/phase2/vmrun.txt","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":231,"column":1},"action":"insert","lines":["void\tVirtualMachine::run(int cycles)","{","","\tint end_time;","","\tif (running == NULL) {","\t\tclock += cycles;","","#if VM_ENABLE_ACCOUNTING == 1","\t\tidle_ticks += cycles;","#endif","\t\treturn;","\t}","","\tif (clock > 5 && clock - running->clock < operation_cycles[running->ir.op]) {","\t\tif ( (clock + cycles) - running->clock < operation_cycles[running->ir.op]) {","\t\t\tclock += cycles;","\t\t\trunning->clock = clock;","\t\t\treturn;","\t\t}","\t\tcycles -= (operation_cycles[running->ir.op] - (clock - running->clock));","\t}","","\tend_time = clock + cycles;","","\tfor (;;) {","\t\t\t","\t\tif (running->pc < 0 || running->pc >= running->size) {","\t\t\trunning->sr.status = ST_RANGE;","\t\t\treturn;","\t\t}","","\t\t*((uint16_t*)&running->ir) = mem[running->base + running->pc];","\t\t","\t\tswitch (running->ir.op) {","\t\tcase OP_LOAD:","\t\t\tif (running->ir.i) {","\t\t\t\trunning->r[running->ir.rd] = running->ir.constant;","\t\t\t} else {","\t\t\t\tif (running->ir.addr >= running->size) {","\t\t\t\t\trunning->sr.status = ST_RANGE;","\t\t\t\t\treturn;","\t\t\t\t}","\t\t\t\trunning->r[running->ir.rd] = mem[running->base + running->ir.addr];","\t\t\t}","\t\t\tbreak;","\t\tcase OP_STORE:","\t\t\tif (running->ir.addr >= running->size) {","\t\t\t\trunning->sr.status = ST_RANGE;","\t\t\t\treturn;","\t\t\t}","\t\t\tmem[running->base + running->ir.addr] = running->r[running->ir.rd];","\t\t\tbreak;","\t\tcase OP_ADD:","\t\t\t(running->ir.i) ?","\t\t\t(running->sr.overflow = (USHRT_MAX - running->r[running->ir.rd] < running->ir.constant),","\t\t\trunning->r[running->ir.rd] += running->ir.constant) :","\t\t\t(running->sr.overflow = (USHRT_MAX - running->r[running->ir.rd] < running->r[running->ir.rs]),","\t\t\trunning->r[running->ir.rd] += running->r[running->ir.rs]);","\t\t\trunning->sr.carry = ((running->r[running->ir.rd] & 1) == 0);","\t\t\tbreak;","\t\tcase OP_ADDC:","\t\t\t(running->ir.i) ? ","\t\t\t(running->sr.overflow = (USHRT_MAX - running->r[running->ir.rd] < running->ir.constant + running->sr.carry),","\t\t\trunning->r[running->ir.rd] += running->ir.constant + running->sr.carry) :","\t\t\t(running->sr.overflow = (USHRT_MAX - running->r[running->ir.rd] < running->r[running->ir.rs] + running->sr.carry),","\t\t\trunning->r[running->ir.rd] += running->r[running->ir.rs] + running->sr.carry);","\t\t\trunning->sr.carry = ((running->r[running->ir.rd] & 1) == 0);","\t\t\tbreak;","\t\tcase OP_SUB:","\t\t\t(running->ir.i) ? ","\t\t\t(running->sr.overflow = (running->ir.constant > running->r[running->ir.rd]),","\t\t\trunning->r[running->ir.rd] -= running->ir.constant) : ","\t\t\t(running->sr.overflow = (running->r[running->ir.rs] > running->r[running->ir.rd]),","\t\t\trunning->r[running->ir.rd] -= running->r[running->ir.rs]);","\t\t\trunning->sr.carry = (running->r[running->ir.rd] & 1);","\t\t\tbreak;","\t\tcase OP_SUBC:","\t\t\t(running->ir.i) ?","\t\t\t(running->sr.overflow = ((running->ir.constant + running->sr.carry) > running->r[running->ir.rd]),","\t\t\trunning->r[running->ir.rd] -= running->ir.constant + running->sr.carry) :","\t\t\t(running->sr.overflow = ((running->r[running->ir.rs] + running->sr.carry) > running->r[running->ir.rd]),","\t\t\trunning->r[running->ir.rd] -= running->r[running->ir.rs] + running->sr.carry);","\t\t\trunning->sr.carry = (running->r[running->ir.rd] & 1);","\t\t\tbreak;","\t\tcase OP_AND:","\t\t\t(running->ir.i) ?","\t\t\trunning->r[running->ir.rd] &= running->ir.constant :","\t\t\trunning->r[running->ir.rd] &= running->r[running->ir.rs];","\t\t\tbreak;","\t\tcase OP_XOR:","\t\t\t(running->ir.i) ?","\t\t\trunning->r[running->ir.rd] ^= running->ir.constant :","\t\t\trunning->r[running->ir.rd] ^= running->r[running->ir.rs];","\t\t\tbreak;","\t\tcase OP_COMPL:","\t\t\trunning->r[running->ir.rd] = ~running->r[running->ir.rd];","\t\t\tbreak;","\t\tcase OP_SHL:","\t\t\trunning->sr.carry = (running->r[running->ir.rd] & 16);","\t\t\trunning->r[running->ir.rd] <<= 1;","\t\t\tbreak;","\t\tcase OP_SHLA:","\t\t\trunning->sr.carry = (running->r[running->ir.rd] & 16);","\t\t\trunning->r[running->ir.rd] = ((int16_t)running->r[running->ir.rd]) << 1;","\t\t\tbreak;","\t\tcase OP_SHR:","\t\t\trunning->sr.carry = (running->r[running->ir.rd] & 1);","\t\t\trunning->r[running->ir.rd] >>= 1;","\t\t\tbreak;","\t\tcase OP_SHRA:","\t\t\trunning->sr.carry = (running->r[running->ir.rd] & 1);","\t\t\trunning->r[running->ir.rd] = ((int16_t)running->r[running->ir.rd]) >> 1;","\t\t\tbreak;","\t\tcase OP_COMPR:","\t\t\tif (running->ir.i) {","\t\t\t\trunning->sr.less = running->sr.equal = running->sr.greater = 0;","\t\t\t\tif (running->r[running->ir.rd] < running->ir.constant) {","\t\t\t\t\trunning->sr.less = 1;","\t\t\t\t} else if (running->r[running->ir.rd] > running->ir.constant) {","\t\t\t\t\trunning->sr.greater = 1;","\t\t\t\t} else {","\t\t\t\t\trunning->sr.equal = 1;","\t\t\t\t}","\t\t\t} else {","\t\t\t\trunning->sr.less = running->sr.equal = running->sr.greater = 0;","\t\t\t\tif (running->r[running->ir.rd] < running->r[running->ir.rs]) {","\t\t\t\t\trunning->sr.less = 1;","\t\t\t\t} else if (running->r[running->ir.rd] > running->r[running->ir.rs]) {","\t\t\t\t\trunning->sr.greater = 1;","\t\t\t\t} else {","\t\t\t\t\trunning->sr.equal = 1;","\t\t\t\t}","\t\t\t}","\t\t\tbreak;","\t\tcase OP_GETSTAT:","\t\t\trunning->r[running->ir.rd] = *(uint16_t*)&running->sr;","\t\t\tbreak;","\t\tcase OP_PUTSTAT:","\t\t\t*(uint16_t*)&running->sr = running->r[running->ir.rd];","\t\t\tbreak;","\t\tcase OP_JUMP:","\t\t\trunning->pc = running->ir.addr;","\t\t\tbreak;","\t\tcase OP_JUMPL:","\t\t\tif (running->sr.less) {","\t\t\t\trunning->pc = running->ir.addr;","\t\t\t} else {","\t\t\t\t++running->pc;","\t\t\t}","\t\t\tbreak;","\t\tcase OP_JUMPE:","\t\t\tif (running->sr.equal) {","\t\t\t\trunning->pc = running->ir.addr;","\t\t\t} else {","\t\t\t\t++running->pc;","\t\t\t}","\t\t\tbreak;","\t\tcase OP_JUMPG:","\t\t\tif (running->sr.greater) {","\t\t\t\trunning->pc = running->ir.addr;","\t\t\t} else {","\t\t\t\t++running->pc;","\t\t\t}","\t\t\tbreak;","\t\tcase OP_CALL:","\t\t\tif ((running->sp < 6) || (running->sp - 6 <= running->base + running->size)) {","\t\t\t\trunning->sr.status = ST_OVERFLOW;","\t\t\t\treturn;","\t\t\t}","\t\t\tmem[running->sp--] = ++running->pc;","\t\t\tmem[running->sp--] = *(uint16_t*)&running->sr;","\t\t\tmem[running->sp--] = running->r[0];","\t\t\tmem[running->sp--] = running->r[1];","\t\t\tmem[running->sp--] = running->r[2];","\t\t\tmem[running->sp--] = running->r[3];","\t\t\trunning->pc = running->ir.addr;","\t\t\tbreak;","\t\tcase OP_RETURN:","\t\t\tif (running->sp + 6 > VM_MEM_SIZE) {","\t\t\t\trunning->sr.status = ST_UNDERFLOW;","\t\t\t\treturn;","\t\t\t}","\t\t\trunning->r[3] = mem[++running->sp];","\t\t\trunning->r[2] = mem[++running->sp];","\t\t\trunning->r[1] = mem[++running->sp];","\t\t\trunning->r[0] = mem[++running->sp];","\t\t\t*(uint16_t*)&running->sr = mem[++running->sp];","\t\t\trunning->pc = mem[++running->sp];","\t\t\tbreak;","\t\tcase OP_READ:","\t\t\trunning->input >> running->r[running->ir.rd];","\t\t\trunning->sr.status = ST_READING;","\t\t\trunning->sr.io = running->ir.rd;","\t\t\tbreak;","\t\tcase OP_WRITE:","\t\t\trunning->output << (int16_t)running->r[running->ir.rd] << std::endl;","\t\t\trunning->sr.status = ST_WRITING;","\t\t\trunning->sr.io = running->ir.rd;","\t\t\tbreak;","\t\tcase OP_HALT:","\t\t\trunning->sr.status = ST_HALT;","\t\t\tbreak;","\t\tcase OP_NOOP:","\t\t\tbreak;","\t\tdefault:","\t\t\trunning->sr.status = ST_ILSEQ;","\t\t\treturn;","\t\t}","","\t\tif (running->ir.op < OP_JUMP || running->ir.op > OP_RETURN) ++running->pc;","","\t\tif (clock + operation_cycles[running->ir.op] >= end_time) {","#if VM_ENABLE_ACCOUNTING == 1","\t\t\trunning->cpu_time += end_time - clock;","#endif","\t\t\trunning->clock = clock = end_time;","\t\t\treturn;","\t\t}","\t\tclock += operation_cycles[running->ir.op];","","#if VM_ENABLE_ACCOUNTING == 1","\t\trunning->cpu_time += operation_cycles[running->ir.op];","#endif","\t","\t\tif (running->sr.status != ST_HALT) {","\t\t\trunning->sr.status = ST_AGAIN;","\t\t} else {","\t\t\treturn;","\t\t}","\t}\t","}"],"id":1}]]},"ace":{"folds":[],"scrolltop":2814,"scrollleft":0,"selection":{"start":{"row":231,"column":1},"end":{"row":231,"column":1},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":200,"state":"start","mode":"ace/mode/text"}},"timestamp":1463351316569,"hash":"492666cacc7083d745a6f6329835044542a4a7f7"}