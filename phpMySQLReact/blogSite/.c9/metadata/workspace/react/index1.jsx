{"filter":false,"title":"index1.jsx","tooltip":"/react/index1.jsx","undoManager":{"mark":1,"position":1,"stack":[[{"start":{"row":0,"column":0},"end":{"row":152,"column":61},"action":"insert","lines":["/* global React */","/* global ReactDOM */","/* global ajax */","","var LogoutButton = React.createClass({","    onLogout : function() {","        ajax('logout.php', null, function(response) {","//            if (response.result === 'error') {","//                alert('Error: ' + response.msg);","//            } else {","                this.props.onLogout();","//            }","        }.bind(this));","        this.props.onLogout();  ","    },","    render: function() {","        return (","            <div>","                <input type=\"submit\" value=\"Logout\" onClick={this.onLogout}/> <br/>","            </div>","            );","    }","});","","var Loginform = React.createClass({","    getInitialState: function() {","        return {","            username : 'alice',","            password : '1234'","        };    ","    },","    onUsernameChange : function(e) {","        this.setState({ username: e.target.value });","    },","    onPasswordChange : function(e) {","        this.setState({ password: e.target.value });","    },","    onSubmit : function(e) {","        // send username and password in an ajax request to server","        ajax('login.php', { username: this.state.username, password : this.state.password }, function(response) {","            if (response.result === 'failure') {","                alert('Bad username or password');","            } else if (response.result === 'success') {","                this.props.onLogin(response.clickCount);","            } else if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else {","                alert(\"Response message has no result attribute.\");","            }","        }.bind(this));","    },","    render: function() {","        return (","            <div>","                Username: <input type='text' onChange={this.onUsernameChange} value={this.state.username} /> <br/>","                Password: <input type='password' onChange={this.onPasswordChange} value={this.state.password} /> <br/>","                          <input type='submit'  onClick={this.onSubmit} value='Login'/> <br/>","            </div>","        );","    }","});","","var ClickButton = React.createClass({","    onClick : function() {","        ajax('record_click.php', null, function(response) {","            if (response.result === 'success') {","                this.props.setClicks(response.clickCount);","            } else if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else {","                alert(\"Response message has no result attribute.\");","            }","        }.bind(this));   ","    },","    render : function() {","        return <input type=\"submit\" value=\"Click Me\" onClick={this.onClick} />;","    }","});","","var ClickScreen = React.createClass({","    render : function() {","        return (","            <div>","                <div>Click count: {this.props.clickCount}</div>","                <ClickButton setClicks={this.props.setClicks} />","                <LogoutButton onLogout={this.props.onLogout} />","            </div>","        );","    }","});","","var LoginScreen = React.createClass({","    render: function() {","        return <Loginform onLogin={this.props.onLogin} />  ","    }","});","","var LoadingScreen = React.createClass({","    render : function() {","        return <div>Loading...</div>;","    }","});","","var App = React.createClass({","    getInitialState : function() {","        // clickCount set to null means the user is not logged in.","        return { ","            loading : true,","            clickCount : null","        };","    },","    componentDidMount : function() {","        ajax(\"init.php\", null, function(response) {","            if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else if (response.result === 'loggedIn') {","                this.setState({clickCount: response.clickCount, loading : false});","            } else if (response.result === 'notLoggedIn') {","                this.setState({clickCount: null, loading: false });","            } else {","                alert(\"Response message has no result attribute.\")","            }","        }.bind(this))    ","    },","    onLogin: function(clickCount) {","        console.log(clickCount);","        this.setState({clickCount : clickCount});","    },","    onLogout: function() {","        this.setState({clickCount : null});  ","    },","    setClick: function(clickCount) {","        this.setState({clickCount: this.clickCount});","    },","    render: function() {","        if (this.state.loading) {","            return <LoadingScreen />","        }","        else if (this.state.clickCount === null) {","            return <LoginScreen onLogin={this.onLogin} />;","        } else {","            return ( ","                <ClickScreen ","                    setClicks={this.setClick} ","                    onLogout={this.onLogout} ","                    clickCount={this.state.clickCount} ","                />","            );","        }","    }","});","","ReactDOM.render(<App />, document.getElementById('content'));"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":152,"column":61},"action":"remove","lines":["/* global React */","/* global ReactDOM */","/* global ajax */","","var LogoutButton = React.createClass({","    onLogout : function() {","        ajax('logout.php', null, function(response) {","//            if (response.result === 'error') {","//                alert('Error: ' + response.msg);","//            } else {","                this.props.onLogout();","//            }","        }.bind(this));","        this.props.onLogout();  ","    },","    render: function() {","        return (","            <div>","                <input type=\"submit\" value=\"Logout\" onClick={this.onLogout}/> <br/>","            </div>","            );","    }","});","","var Loginform = React.createClass({","    getInitialState: function() {","        return {","            username : 'alice',","            password : '1234'","        };    ","    },","    onUsernameChange : function(e) {","        this.setState({ username: e.target.value });","    },","    onPasswordChange : function(e) {","        this.setState({ password: e.target.value });","    },","    onSubmit : function(e) {","        // send username and password in an ajax request to server","        ajax('login.php', { username: this.state.username, password : this.state.password }, function(response) {","            if (response.result === 'failure') {","                alert('Bad username or password');","            } else if (response.result === 'success') {","                this.props.onLogin(response.clickCount);","            } else if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else {","                alert(\"Response message has no result attribute.\");","            }","        }.bind(this));","    },","    render: function() {","        return (","            <div>","                Username: <input type='text' onChange={this.onUsernameChange} value={this.state.username} /> <br/>","                Password: <input type='password' onChange={this.onPasswordChange} value={this.state.password} /> <br/>","                          <input type='submit'  onClick={this.onSubmit} value='Login'/> <br/>","            </div>","        );","    }","});","","var ClickButton = React.createClass({","    onClick : function() {","        ajax('record_click.php', null, function(response) {","            if (response.result === 'success') {","                this.props.setClicks(response.clickCount);","            } else if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else {","                alert(\"Response message has no result attribute.\");","            }","        }.bind(this));   ","    },","    render : function() {","        return <input type=\"submit\" value=\"Click Me\" onClick={this.onClick} />;","    }","});","","var ClickScreen = React.createClass({","    render : function() {","        return (","            <div>","                <div>Click count: {this.props.clickCount}</div>","                <ClickButton setClicks={this.props.setClicks} />","                <LogoutButton onLogout={this.props.onLogout} />","            </div>","        );","    }","});","","var LoginScreen = React.createClass({","    render: function() {","        return <Loginform onLogin={this.props.onLogin} />  ","    }","});","","var LoadingScreen = React.createClass({","    render : function() {","        return <div>Loading...</div>;","    }","});","","var App = React.createClass({","    getInitialState : function() {","        // clickCount set to null means the user is not logged in.","        return { ","            loading : true,","            clickCount : null","        };","    },","    componentDidMount : function() {","        ajax(\"init.php\", null, function(response) {","            if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else if (response.result === 'loggedIn') {","                this.setState({clickCount: response.clickCount, loading : false});","            } else if (response.result === 'notLoggedIn') {","                this.setState({clickCount: null, loading: false });","            } else {","                alert(\"Response message has no result attribute.\")","            }","        }.bind(this))    ","    },","    onLogin: function(clickCount) {","        console.log(clickCount);","        this.setState({clickCount : clickCount});","    },","    onLogout: function() {","        this.setState({clickCount : null});  ","    },","    setClick: function(clickCount) {","        this.setState({clickCount: this.clickCount});","    },","    render: function() {","        if (this.state.loading) {","            return <LoadingScreen />","        }","        else if (this.state.clickCount === null) {","            return <LoginScreen onLogin={this.onLogin} />;","        } else {","            return ( ","                <ClickScreen ","                    setClicks={this.setClick} ","                    onLogout={this.onLogout} ","                    clickCount={this.state.clickCount} ","                />","            );","        }","    }","});","","ReactDOM.render(<App />, document.getElementById('content'));"],"id":2},{"start":{"row":0,"column":0},"end":{"row":152,"column":61},"action":"insert","lines":["/* global React */","/* global ReactDOM */","/* global ajax */","","var LogoutButton = React.createClass({","    onLogout : function() {","        ajax('logout.php', null, function(response) {","//            if (response.result === 'error') {","//                alert('Error: ' + response.msg);","//            } else {","                this.props.onLogout();","//            }","        }.bind(this));","        this.props.onLogout();  ","    },","    render: function() {","        return (","            <div>","                <input type=\"submit\" value=\"Logout\" onClick={this.onLogout}/> <br/>","            </div>","            );","    }","});","","var Loginform = React.createClass({","    getInitialState: function() {","        return {","            username : 'alice',","            password : '1234'","        };    ","    },","    onUsernameChange : function(e) {","        this.setState({ username: e.target.value });","    },","    onPasswordChange : function(e) {","        this.setState({ password: e.target.value });","    },","    onSubmit : function(e) {","        // send username and password in an ajax request to server","        ajax('login.php', { username: this.state.username, password : this.state.password }, function(response) {","            if (response.result === 'failure') {","                alert('Bad username or password');","            } else if (response.result === 'success') {","                this.props.onLogin(response.clickCount);","            } else if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else {","                alert(\"Response message has no result attribute.\");","            }","        }.bind(this));","    },","    render: function() {","        return (","            <div>","                Username: <input type='text' onChange={this.onUsernameChange} value={this.state.username} /> <br/>","                Password: <input type='password' onChange={this.onPasswordChange} value={this.state.password} /> <br/>","                          <input type='submit'  onClick={this.onSubmit} value='Login'/> <br/>","            </div>","        );","    }","});","","var ClickButton = React.createClass({","    onClick : function() {","        ajax('record_click.php', null, function(response) {","            if (response.result === 'success') {","                this.props.setClicks(response.clickCount);","            } else if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else {","                alert(\"Response message has no result attribute.\");","            }","        }.bind(this));   ","    },","    render : function() {","        return <input type=\"submit\" value=\"Click Me\" onClick={this.onClick} />;","    }","});","","var ClickScreen = React.createClass({","    render : function() {","        return (","            <div>","                <div>Click count: {this.props.clickCount}</div>","                <ClickButton setClicks={this.props.setClicks} />","                <LogoutButton onLogout={this.props.onLogout} />","            </div>","        );","    }","});","","var LoginScreen = React.createClass({","    render: function() {","        return <Loginform onLogin={this.props.onLogin} />  ","    }","});","","var LoadingScreen = React.createClass({","    render : function() {","        return <div>Loading...</div>;","    }","});","","var App = React.createClass({","    getInitialState : function() {","        // clickCount set to null means the user is not logged in.","        return { ","            loading : true,","            clickCount : null","        };","    },","    componentDidMount : function() {","        ajax(\"init.php\", null, function(response) {","            if (response.result === 'error') {","                alert('Error: ' + response.msg);","            } else if (response.result === 'loggedIn') {","                this.setState({clickCount: response.clickCount, loading : false});","            } else if (response.result === 'notLoggedIn') {","                this.setState({clickCount: null, loading: false });","            } else {","                alert(\"Response message has no result attribute.\")","            }","        }.bind(this))    ","    },","    onLogin: function(clickCount) {","        console.log(clickCount);","        this.setState({clickCount : clickCount});","    },","    onLogout: function() {","        this.setState({clickCount : null});  ","    },","    setClick: function(clickCount) {","        this.setState({clickCount: this.clickCount});","    },","    render: function() {","        if (this.state.loading) {","            return <LoadingScreen />","        }","        else if (this.state.clickCount === null) {","            return <LoginScreen onLogin={this.onLogin} />;","        } else {","            return ( ","                <ClickScreen ","                    setClicks={this.setClick} ","                    onLogout={this.onLogout} ","                    clickCount={this.state.clickCount} ","                />","            );","        }","    }","});","","ReactDOM.render(<App />, document.getElementById('content'));"]}]]},"ace":{"folds":[],"scrolltop":1547,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":152,"column":61},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1464116694411,"hash":"c5cc7e121a9dc092c16098e4b8339a752e52560d"}